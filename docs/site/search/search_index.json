{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Highly Efficient Imaging Genetics (HEIG) HEIG is a statistical framework written in Python for efficient joint analysis of imaging and genetic data, focusing on voxel-level analysis. The analyses can be performed by HEIG : Voxel-level genome-wide association analysis Voxel-level heritability and genetic correlations in images Cross-trait genetic correlations between voxels and non-imaging phenotypes Generating and sharing a minimal dataset of summary statistics for secondary analyses at voxel level Licence HEIG is licensed under GNU General Public License v3.0 . Contact HEIG is developed and maintained by Owen Jiang ( owenjf@live.unc.edu or zhiwenowenjiang@gmail.com ) under the supervision and support from Hongtu Zhu and the BIGS2 team at the University of North Carolina at Chapel Hill. You can report a bug or issue at issues .","title":"Home"},{"location":"#highly-efficient-imaging-genetics-heig","text":"HEIG is a statistical framework written in Python for efficient joint analysis of imaging and genetic data, focusing on voxel-level analysis. The analyses can be performed by HEIG : Voxel-level genome-wide association analysis Voxel-level heritability and genetic correlations in images Cross-trait genetic correlations between voxels and non-imaging phenotypes Generating and sharing a minimal dataset of summary statistics for secondary analyses at voxel level","title":"Highly Efficient Imaging Genetics (HEIG)"},{"location":"#licence","text":"HEIG is licensed under GNU General Public License v3.0 .","title":"Licence"},{"location":"#contact","text":"HEIG is developed and maintained by Owen Jiang ( owenjf@live.unc.edu or zhiwenowenjiang@gmail.com ) under the supervision and support from Hongtu Zhu and the BIGS2 team at the University of North Carolina at Chapel Hill. You can report a bug or issue at issues .","title":"Contact"},{"location":"faq/","text":"","title":"F.A.Q."},{"location":"format/","text":"","title":"Format"},{"location":"install/","text":"","title":"Install"},{"location":"options/","text":"","title":"Options"},{"location":"tutorial/","text":"Gettting started In this tutorial, we will go through seven analysis modules in HEIG (v.1.1.0), including reading images, functional PCA, constructing LDRs, preprocessing summary statistics, voxelwise GWAS reconstruction, heritability and (cross-trait) genetic correlation analysis, and LD matrix construction. For beginners, we recommend reading these modules in the above sequence. To replicate the analyses showed in the tutorial, you can download the example data at Zenodo . The total file size is 1.1 GB. After downloading the example data, unzip it and navigate to it. Make sure your current directory is example . Let's get started. Reading images heig.py \\ --read-image \\ --out output/images/example \\ --threads 4 \\ --image-dir input/images/ \\ --image-suffix _example_image.nii.gz \\ --coord-dir input/images/s1000_example_image.nii.gz \\ --read-image is the main flag for reading images and --out specifies the prefix of output. --threads is to specify the number of threads in parallel. --image-dir is to specify the directory(s) and flag --image-suffix to specify the suffix(s). HEIG supports images in NIFTI , CIFTI2 , and FreeSurfer morphometry data format. Prior to loading into HEIG , all images should be appropriately registered/projected to the same template. Images can be placed under one or more directories. Separate multiple directories by comma, such as data/image_folder1,data/image_folder2,data/image_folder3 . The naming convention of image file is <ID><suffix> . For example, images in this tutorial were named as sxxxx_example_image.nii.gz , where sxxxx (e.g., s1001) is the ID and _example_image.nii.gz is the suffix. If images are from different directories, the same number of suffices must be provided and separated by comma, such as suffix1,suffix2,suffix3 . --coord-dir is to specify the coordinate file. For NIFTI images, it should also be a NIFTI image; for CIFTI2 images, it should be a GIFTI image; for FreeSurfer morphometry data, it should be a FreeSurfer surface mesh file. Only one coordinate file can be provided even if you have images from multiple directories. HEIG also supports images in tabular data. Using --image-txt and --coord-txt to read images and coordinates, respectively. Refer to Basic options and input formats for detailed format.","title":"Tutorial"},{"location":"tutorial/#gettting-started","text":"In this tutorial, we will go through seven analysis modules in HEIG (v.1.1.0), including reading images, functional PCA, constructing LDRs, preprocessing summary statistics, voxelwise GWAS reconstruction, heritability and (cross-trait) genetic correlation analysis, and LD matrix construction. For beginners, we recommend reading these modules in the above sequence. To replicate the analyses showed in the tutorial, you can download the example data at Zenodo . The total file size is 1.1 GB. After downloading the example data, unzip it and navigate to it. Make sure your current directory is example . Let's get started.","title":"Gettting started"},{"location":"tutorial/#reading-images","text":"heig.py \\ --read-image \\ --out output/images/example \\ --threads 4 \\ --image-dir input/images/ \\ --image-suffix _example_image.nii.gz \\ --coord-dir input/images/s1000_example_image.nii.gz \\ --read-image is the main flag for reading images and --out specifies the prefix of output. --threads is to specify the number of threads in parallel. --image-dir is to specify the directory(s) and flag --image-suffix to specify the suffix(s). HEIG supports images in NIFTI , CIFTI2 , and FreeSurfer morphometry data format. Prior to loading into HEIG , all images should be appropriately registered/projected to the same template. Images can be placed under one or more directories. Separate multiple directories by comma, such as data/image_folder1,data/image_folder2,data/image_folder3 . The naming convention of image file is <ID><suffix> . For example, images in this tutorial were named as sxxxx_example_image.nii.gz , where sxxxx (e.g., s1001) is the ID and _example_image.nii.gz is the suffix. If images are from different directories, the same number of suffices must be provided and separated by comma, such as suffix1,suffix2,suffix3 . --coord-dir is to specify the coordinate file. For NIFTI images, it should also be a NIFTI image; for CIFTI2 images, it should be a GIFTI image; for FreeSurfer morphometry data, it should be a FreeSurfer surface mesh file. Only one coordinate file can be provided even if you have images from multiple directories. HEIG also supports images in tabular data. Using --image-txt and --coord-txt to read images and coordinates, respectively. Refer to Basic options and input formats for detailed format.","title":"Reading images"}]}